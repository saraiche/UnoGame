<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="changePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="chat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="forgetMyPassword" xml:space="preserve">
    <value>Forget my password</value>
  </data>
  <data name="friendsList" xml:space="preserve">
    <value>Friends list</value>
  </data>
  <data name="game" xml:space="preserve">
    <value>UNO</value>
  </data>
  <data name="informationSuccesfullSignUp" xml:space="preserve">
    <value>Successfull sign up :)</value>
  </data>
  <data name="informationUsernameDuplicate" xml:space="preserve">
    <value>Username already registered, try with another</value>
  </data>
  <data name="informationWrongSignUp" xml:space="preserve">
    <value>Something went wrong, try again later</value>
  </data>
  <data name="instructionChangePasswordCode" xml:space="preserve">
    <value>We'll send you a code by email to change your password</value>
  </data>
  <data name="instructionCheckSpam" xml:space="preserve">
    <value>Can't see the code? Check your spam</value>
  </data>
  <data name="instructionEnterConfirmCode" xml:space="preserve">
    <value>Enter confirm code:</value>
  </data>
  <data name="instructionEnterInvitationCode" xml:space="preserve">
    <value>Enter Invitation Code</value>
  </data>
  <data name="instructionEnterNewPassword" xml:space="preserve">
    <value>Enter new password</value>
  </data>
  <data name="instructionEnterUsername" xml:space="preserve">
    <value>Enter username</value>
  </data>
  <data name="instructionExitGame" xml:space="preserve">
    <value>Are you sure you want to exit?</value>
  </data>
  <data name="instructionRepeatPassword" xml:space="preserve">
    <value>Repeat your new password</value>
  </data>
  <data name="instructionSendCodeByEmail" xml:space="preserve">
    <value>Send code by email</value>
  </data>
  <data name="instructionSendConfirmCode" xml:space="preserve">
    <value>We'll send you a code by email to confirm your account</value>
  </data>
  <data name="lobby" xml:space="preserve">
    <value>Lobby</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="newGame" xml:space="preserve">
    <value>New game</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="notEmptyFields" xml:space="preserve">
    <value>Can't leave empty fields</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="playAsGuest" xml:space="preserve">
    <value>Play as guest</value>
  </data>
  <data name="players" xml:space="preserve">
    <value>Players</value>
  </data>
  <data name="playWithFriends" xml:space="preserve">
    <value>Play with friends</value>
  </data>
  <data name="requestNewCode" xml:space="preserve">
    <value>Request new code</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="sendCode" xml:space="preserve">
    <value>Send code</value>
  </data>
  <data name="settingsProfile" xml:space="preserve">
    <value>Settings profile</value>
  </data>
  <data name="signUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="theGameCodeIs" xml:space="preserve">
    <value>The game code is: </value>
  </data>
  <data name="user" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="wrongCredentials" xml:space="preserve">
    <value>Wrong credentials</value>
  </data>
  <data name="wrongEmail" xml:space="preserve">
    <value>The email is invalid</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>