//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace unoProyect.DataServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddImages", ReplyAction="http://tempuri.org/IDataService/AddImagesResponse")]
        bool AddImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddImages", ReplyAction="http://tempuri.org/IDataService/AddImagesResponse")]
        System.Threading.Tasks.Task<bool> AddImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddCredentials", ReplyAction="http://tempuri.org/IDataService/AddCredentialsResponse")]
        bool AddCredentials(Logic.DataServiceReference.DTOCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddCredentials", ReplyAction="http://tempuri.org/IDataService/AddCredentialsResponse")]
        System.Threading.Tasks.Task<bool> AddCredentialsAsync(Logic.DataServiceReference.DTOCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/isUser", ReplyAction="http://tempuri.org/IDataService/isUserResponse")]
        bool isUser(Logic.DataServiceReference.DTOCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/isUser", ReplyAction="http://tempuri.org/IDataService/isUserResponse")]
        System.Threading.Tasks.Task<bool> isUserAsync(Logic.DataServiceReference.DTOCredentials credentials);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : unoProyect.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<unoProyect.DataServiceReference.IDataService>, unoProyect.DataServiceReference.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddImages() {
            return base.Channel.AddImages();
        }
        
        public System.Threading.Tasks.Task<bool> AddImagesAsync() {
            return base.Channel.AddImagesAsync();
        }
        
        public bool AddCredentials(Logic.DataServiceReference.DTOCredentials credentials) {
            return base.Channel.AddCredentials(credentials);
        }
        
        public System.Threading.Tasks.Task<bool> AddCredentialsAsync(Logic.DataServiceReference.DTOCredentials credentials) {
            return base.Channel.AddCredentialsAsync(credentials);
        }
        
        public bool isUser(Logic.DataServiceReference.DTOCredentials credentials) {
            return base.Channel.isUser(credentials);
        }
        
        public System.Threading.Tasks.Task<bool> isUserAsync(Logic.DataServiceReference.DTOCredentials credentials) {
            return base.Channel.isUserAsync(credentials);
        }
    }
}
